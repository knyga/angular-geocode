/*! angular-geocode - v1.0.0 - 2015-04-24
* https://github.com/knyga/angular-geocode
* Copyright (c) 2015 ; Licensed  */
angular.module("angularGeocode",[]),angular.module("angularGeocode").directive("geocode",["$timeout","geocodef",function(a,b){return{restrict:"EA",scope:{address:"=",coordinates:"="},template:"<div></div>",link:function(a){var c={address:!1,coordinates:!0};a.$watch("address",function(d){c.address||b.toLatLng(d).then(function(b){a.coordinates=b,c.coordinates=!0}),c.address=!1}),a.$watch("coordinates",function(d){c.coordinates||b.toAddress(d).then(function(b){a.address=b,c.address=!0}),c.coordinates=!1},!0)}}}]),angular.module("angularGeocode").factory("geocodef",["$timeout","$q",function(a,b){var c=function(){return"undefined"!=typeof google?new google.maps.Geocoder:null},d=c(),e=function(b,e,f){null==d&&(d=c()),d.geocode(b,function(b,c){a(function(){if(!e(b,c))switch(c){case google.maps.GeocoderStatus.OVER_QUERY_LIMIT:f.reject("Over query limit");break;case google.maps.GeocoderStatus.REQUEST_DENIED:f.reject("Request denied");break;case google.maps.GeocoderStatus.INVALID_REQUEST:f.reject("Invalid request")}})})};return{toLatLng:function(a){var c=b.defer(),d=function(a,b){switch(b){case"OK":return c.resolve({lat:a[0].geometry.location.lat(),lng:a[0].geometry.location.lng()}),!0;case"ZERO_RESULTS":return c.resolve({lat:0,lng:0}),!0}return!1};return a?e({address:a},d,c):d(null,google.maps.GeocoderStatus.ZERO_RESULTS),c.promise},toAddress:function(a){var c=b.defer(),d=function(a,b){switch(b){case"OK":var d=a.length?a[a.length-1].formatted_address:"",e=0;for(e=0;e<a.length;e++)if(/administrative_area_level/.test(a[e].types[0])){d=a[e].formatted_address;break}if(d)return c.resolve(d),!0;c.reject("Location not found");break;case"ZERO_RESULTS":return c.resolve(""),!0}return!1};return a&&a.lat&&a.lng?e({latLng:a},d,c):d(null,google.maps.GeocoderStatus.ZERO_RESULTS),c.promise}}}]);